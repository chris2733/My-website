{"version":3,"sources":["components/layout/header.js","components/todo-item.js","components/Todos.js","components/FilterAll.js","components/Filter1.js","components/Filter2.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","TodoItem","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","getStyle","display","props","todo","hidden","inherits","createClass","key","value","_this$props$todo","classN","content","title","style","href","Component","Todos","todos","map","todo_item","id","markComplete","buttTodo","FilterAll","state","typeF","onChange","e","filterChange","onClick","Filter1","Filter2","App","completed","codepen","typeofit","setState","header","components_FilterAll","components_Filter1","components_Filter2","components_Todos","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.991c0eb6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header() {\r\n    return (\r\n      <div className=\"header\">\r\n      Header\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class TodoItem extends Component {\r\n  getStyle = () => {\r\n    return {\r\n      display: this.props.todo.hidden ? \"none\" : \"\",\r\n    }\r\n  }\r\n  render() {\r\n    const { classN, content, title } = this.props.todo;\r\n    return (\r\n      <div className=\"todo-item\" style={this.getStyle()}>\r\n        <h3>{title}</h3>\r\n        <button\r\n          className={classN} >\r\n          {content}\r\n        </button>\r\n        <h4>Codepen Link</h4>\r\n        <a href=\"#nogo\" className=\"codepenlink\">Not yet m8</a>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// PropTypes\r\nTodoItem.propTypes = {\r\n  todo: PropTypes.object.isRequired\r\n}\r\n\r\nexport default TodoItem;\r\n","import React, { Component } from 'react';\r\nimport TodoItem from './todo-item.js';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Todos extends Component {\r\n  render() {\r\n    return this.props.todos.map((todo) => (\r\n      <TodoItem key={todo.id} todo={todo} markComplete={this.props.markComplete}  buttTodo={this.props.buttTodo}/>\r\n    ));\r\n  }\r\n}\r\n\r\n// PropTypes\r\nTodos.propTypes = {\r\n  todos: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Todos;\r\n","import React, { Component } from 'react';\r\n\r\nexport class FilterAll extends Component {\r\n  state = {\r\n    typeF: \"typeall\",\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.props.filterChange(this.state.typeF);\r\n  }\r\n  render() {\r\n    return (\r\n      <div\r\n        onClick={this.onChange}\r\n        className=\"filterbuttons\">\r\n        Show All\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default FilterAll;\r\n","import React, { Component } from 'react';\r\n\r\nexport class Filter1 extends Component {\r\n  state = {\r\n    typeF: \"type1\",\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.props.filterChange(this.state.typeF);\r\n  }\r\n  render() {\r\n    return (\r\n      <div\r\n        onClick={this.onChange}\r\n        className=\"filterbuttons\"\r\n        > Filter by type 1\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Filter1;\r\n","import React, { Component } from 'react';\r\n\r\nexport class Filter2 extends Component {\r\n  state = {\r\n    typeF: \"type2\",\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.props.filterChange(this.state.typeF);\r\n  }\r\n  render() {\r\n    return (\r\n        <div\r\n          onClick={this.onChange}\r\n          className=\"filterbuttons\"\r\n          > Filter by type 2\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Filter2;\r\n","import React, { Component } from 'react';\r\nimport Header from './components/layout/header';\r\nimport Todos from './components/Todos';\r\nimport FilterAll from './components/FilterAll';\r\nimport Filter1 from './components/Filter1';\r\nimport Filter2 from './components/Filter2';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    todos: [\r\n      {\r\n        id: 1,\r\n        title: \"Button 1\",\r\n        content: 'Button',\r\n        completed: false,\r\n        typeF: \"type1\",\r\n        hidden: false,\r\n        classN: 'slide1',\r\n        codepen: '',\r\n      },\r\n      {\r\n        id: 2,\r\n        title: \"Button 2\",\r\n        content: 'Button',\r\n        completed: false,\r\n        typeF: \"type1\",\r\n        hidden: false,\r\n        classN: 'slide2',\r\n        codepen: '',\r\n      },\r\n      {\r\n        id: 3,\r\n        title: \"Button 3\",\r\n        content: 'Button',\r\n        completed: false,\r\n        typeF: \"type1\",\r\n        hidden: false,\r\n        classN: '',\r\n        codepen: '',\r\n      },\r\n      {\r\n        id: 4,\r\n        title: \"Button 4\",\r\n        content: 'Button',\r\n        completed: false,\r\n        typeF: \"type1\",\r\n        hidden: false,\r\n        classN: '',\r\n        codepen: '',\r\n      },\r\n      {\r\n        id: 5,\r\n        title: \"Button 5\",\r\n        content: 'Button',\r\n        completed: false,\r\n        typeF: \"type2\",\r\n        hidden: false,\r\n        classN: '',\r\n        codepen: '',\r\n      },\r\n      {\r\n        id: 6,\r\n        title: \"Button 6\",\r\n        content: 'Button',\r\n        completed: false,\r\n        typeF: \"type2\",\r\n        hidden: false,\r\n        classN: '',\r\n        codepen: '',\r\n      },\r\n    ]\r\n  }\r\n  filterChange = (typeofit) => {\r\n    this.setState( { todos: this.state.todos.map(todo => {\r\n      if (typeofit === \"typeall\") {\r\n        todo.hidden = false;\r\n      }\r\n      else if (todo.typeF !== typeofit ) {\r\n        todo.hidden = true;\r\n      }\r\n      else {\r\n        todo.hidden = false;\r\n      }\r\n      return todo;\r\n      })\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Header />\r\n        <div className=\"filterbuttons-wrap\">\r\n          <FilterAll filterChange={this.filterChange}/>\r\n          <Filter1 filterChange={this.filterChange}/>\r\n          <Filter2 filterChange={this.filterChange}/>\r\n        </div>\r\n        <div className=\"todo-item-wrap\">\r\n          <Todos todos={this.state.todos}/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}